import { Router } from "express";
import { db } from "../database";
import bcrypt from "bcrypt";

const router = Router();

// ‚úÖ Listar usu√°rios
router.get("/", async (req, res) => {
  try {
    const [rows] = await db.query("SELECT * FROM Funcionario");
    res.json(rows);
  } catch (err) {
    console.error("‚ùå Erro ao buscar usu√°rios:", err);
    res.status(500).json({ error: "Erro ao buscar usu√°rios" });
  }
});

// ‚úÖ Criar usu√°rio
router.post("/", async (req, res) => {
  try {
    console.log("üì• Dados recebidos:", req.body);

    const { nome, email, telefone, senha } = req.body;

    if (!nome || !email || !senha) {
      return res.status(400).json({ error: "Campos obrigat√≥rios faltando!" });
    }

    // üîê Gerar hash da senha
    const senhaHash = await bcrypt.hash(senha, 10);

    await db.query(
      "INSERT INTO Funcionario (nome, email, telefone, senhaHash) VALUES (?, ?, ?, ?)",
      [nome, email, telefone || null, senhaHash]
    );

    res.json({ message: "Usu√°rio criado com sucesso!" });
  } catch (err: any) {
    console.error("‚ùå Erro ao criar usu√°rio:", err);

    // Erro de e-mail duplicado (chave √∫nica no MySQL)
    if (err.code === "ER_DUP_ENTRY") {
      return res.status(400).json({ error: "E-mail j√° cadastrado!" });
    }

    res.status(500).json({ error: "Erro ao criar usu√°rio" });
  }
});

// ‚úÖ Atualizar usu√°rio
router.put("/:id", async (req, res) => {
  try {
    const { id } = req.params;
    const { nome, email, telefone } = req.body;

    await db.query(
      "UPDATE Funcionario SET nome=?, email=?, telefone=? WHERE id=?",
      [nome, email, telefone, id]
    );

    res.json({ message: "Usu√°rio atualizado!" });
  } catch (err) {
    console.error("‚ùå Erro ao atualizar usu√°rio:", err);
    res.status(500).json({ error: "Erro ao atualizar usu√°rio" });
  }
});

// ‚úÖ Deletar usu√°rio
router.delete("/:id", async (req, res) => {
  try {
    const { id } = req.params;
    await db.query("DELETE FROM Funcionario WHERE id=?", [id]);
    res.json({ message: "Usu√°rio deletado!" });
  } catch (err) {
    console.error("‚ùå Erro ao deletar usu√°rio:", err);
    res.status(500).json({ error: "Erro ao deletar usu√°rio" });
  }
});

export default router;
